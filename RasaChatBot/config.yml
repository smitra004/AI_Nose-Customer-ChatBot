recipe: default.v1
assistant_id: # Keep the ID generated by rasa init

language: en

pipeline:
# NLU Pipeline
# Components run in order to process user messages
  - name: WhitespaceTokenizer
  - name: RegexFeaturizer # Good for patterns like IDs or specific codes
  - name: LexicalSyntacticFeaturizer # Looks at word shapes, parts of speech
  - name: CountVectorsFeaturizer # Word counts
  - name: CountVectorsFeaturizer
    analyzer: char_wb # Character n-grams for typo tolerance
    min_ngram: 1
    max_ngram: 4
  - name: DIETClassifier # Main component for intent classification and entity extraction
    epochs: 100 # Adjust epochs based on dataset size and performance
    constrain_similarities: true
  - name: EntitySynonymMapper # Maps synonyms if you define them
  # Fallback for low NLU confidence - triggers our custom action
  - name: FallbackClassifier
    threshold: 0.5 # If NLU confidence is below this, trigger fallback
    ambiguity_threshold: 0.1 # If top 2 intents are too close

policies:
# Core Policies
# Decide which action the bot takes next
  # 1. RulePolicy: Handles simple, fixed paths defined in rules.yml
  - name: RulePolicy
    # Only applies if core confidence is high OR if NLU fallback triggered
    core_fallback_threshold: 0.4
    core_fallback_action_name: "action_general_knowledge_fallback" # Use our custom action
    enable_fallback_prediction: true
  # 2. MemoizationPolicy: Remembers conversations from training data
  - name: MemoizationPolicy
  # 3. TEDPolicy: Uses machine learning to predict next action based on context
  - name: TEDPolicy
    max_history: 5 # How many conversation turns to look back on
    epochs: 100 # Adjust based on complexity
    constrain_similarities: true
  # 4. UnexpecTEDIntentPolicy: Tries to handle interruptions (experimental)
  - name: UnexpecTEDIntentPolicy
    max_history: 5
    epochs: 100